1. Check Two String which are reverse of each other or not.
2. Find the Smallest Sum of consecutive Number from given Array.
3. Find the Power without using math.pow function.
4. Find the negative Power without using math.pow function.
5.Reverse the String with and without
recursion
6. Find the unique Character in the String is repeated in a string 
7. Count the no of vowels and constants in a string 
8. Convert a String into integer? 
9. Write a program to find the difference between equals and ==


question 1

using System;

 

public class Program
{
    public static void Main()
    {
        string str1 = "hello";
        string str2 = "ollei";

 

        if (str1.Length != str2.Length)
        {
            Console.WriteLine("Strings are not reverse of each other");
            return;
        }

 

        for (int i = 0; i < str1.Length; i++)
        {
            if (str1[i] != str2[str2.Length - 1 - i])
            {
                Console.WriteLine("Strings are not reverse of each other");
                return;
            }
        }

 

        Console.WriteLine("Strings are reverse of each other");
    }
}


question 2

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace demo1.obj
{
    public class SmallSum {
    static void Main(string[] args) {
        int[] array1 = {4, 2, -3, 1, 6};
        int minSum = FindSmallestSum(nums);
        Console.WriteLine("Smallest Sum: " + minSum);
    }

    static int FindSmallestSum(int[] array1) {
        int currentSum = array1[0];
        int minSum = array1[0];
        for (int i = 1; i < array1.Length; i++) {
            currentSum = Math.Min(array1[i], currentSum + array1[i]);
            minSum = Math.Min(minSum, currentSum);
        }
        return minSum;
    }
}
}


question 3

using System;

public class HelloWorld
{
    public double Pow(double num, int pow)
{
    double result = 1;

    if (pow > 0)
    {
        for (int i = 1; i <= pow; ++i)
        {
            result *= num;
        }
    }
    else if (pow < 0)
    {
        for (int i = -1; i >= pow; --i)
        {
            result /= num;
        }
    }

    return result;
}
    public static void Main(string[] args)
    {
        HelloWorld obj1=new HelloWorld();
       double x=obj1.Pow(2,3);
       Console.WriteLine(x);
    }
}

question 4
Console.WriteLine("Enter the Base value");
int b= int.Parse(Console.ReadLine());

Console.WriteLine("Enter the Power value");
int p= int.Parse(Console.ReadLine());


double res=1;

for(int i=1;i<Math.Abs(p);i++)
	{
		res*=b;
	}
	if(res<0)
	{
		res=1;
	}
Console.WriteLine(b+" raised to the power of "+p+ "is "+ res); 


5.) Reverse a string without recurssion.

 

 
Console.WriteLine("Enter a string");
string s=Console.ReadLine();

 

 

 

string rev="";
for(int i=0;i<s.Length-1;i++)
{
    rev+=s[i];
}
Console.WriteLine("The reversed string is "+rev);


6.Unique character in a string
public bool CheckUnique(string str) {
      string one = "";
      string two = "";
      for (int i = 0; i < str.Length; i++) {
         one = str.Substring(i, 1);
         for (int j = 0; j < str.Length; j++) {
            two = str.Substring(j, 1);
            if ((one == two) && (i != j))
            return false;
         }
      }
      return true;
   }
   static void Main(string[] args) {
      Demo d = new Demo();
      bool b = d.CheckUnique("ansh");
      Console.WriteLine(b);
      Console.ReadKey();
   }
}

7.Count the no of vowels and constants in a string

Soln:

Console.WriteLine("Enter a string");
string s= Console.ReadLine();

int vcount=0;
string v="aeiouAEIOU"
for(int i=0;i<s.Length;i++)
{
	if(v.Contains(s[i])
		{
			vcount++;
		}
}

Console.WriteLine("The number of vowels in the entered string is :"+vcount);


Q.9) convert a string into integer

ans.
 string str='7';
int x=(int) str; explicit type casting

Console.WriteLine(x);


q 10.)Write a program to find the difference between equals and ==

In C#, the equality operator == checks whether two operands are equal or not, and the Object. Equals() method checks whether the two object instances are equal or not


